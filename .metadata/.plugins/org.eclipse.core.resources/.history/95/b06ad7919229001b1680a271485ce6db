package webjdbc;
//services
import java.io.IOException;
import java.util.List;

import javax.annotation.Resource;
import javax.servlet.RequestDispatcher;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;
import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.sql.DataSource;


@WebServlet("/medicines")
public class MedicinesControllerServlet extends HttpServlet {
	private static final long serialVersionUID = 1L;

	private MedicineDbUtil medicineDbUtil;
	
	@Resource(name="jdbc/medicines")
	private DataSource dataSource;
	
	@Override
	public void init() throws ServletException {
		super.init();
		
		// create our student db util ... and pass in the conn pool / datasource
		try {
			medicineDbUtil = new MedicineDbUtil(dataSource);
		}
		catch (Exception exc) {
			throw new ServletException(exc);
		}
	}
	
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {

		try {
			// read the "command" parameter
			String theCommand = request.getParameter("command");
			
			// if the command is missing, then default to listing students
			if (theCommand == null) {
				theCommand = "LIST";
			}
			
			// route to the appropriate method
			switch (theCommand) {
			
			case "LIST":
				listMedicines(request, response);
				break;
				
			case "ADD":
				addStudent(request, response);
				break;
				
			case "LOAD":
				loadStudent(request, response);
				break;
				
			case "UPDATE":
				updateStudent(request, response);
				break;
				
			case "DELETE":
				deleteStudent(request, response);
				break;
				
			default:
				listMedicines(request, response);
			}
				
		}
		catch (Exception exc) {
			throw new ServletException(exc);
		}
		
	}
	
	
	private void addMedicine(HttpServletRequest request, HttpServletResponse response) throws Exception {

		// read student info from form data
		String medicineName = request.getParameter("medicineName");
		String costStr = request.getParameter("cost");
		String unitsStr = request.getParameter("units");
		String mfgDate = request.getParameter("mfgDate");
		String expDate = request.getParameter("expDate");
		
		double cost = Double.parseDouble(costStr);
		int units = Integer.parseInt(unitsStr);
		
		// create a new student object
		Medicine theMedicine = new Medicine(medicineName, units, cost, mfgDate, expDate);
		
		// add the student to the database
		MedicineDbUtil.addMedicine(theMedicine);
				
		// send back to main page (the student list)
		listStudents(request, response);
	}

	private void deleteStudent(HttpServletRequest request, HttpServletResponse response)
			throws Exception {

			// read student id from form data
			String theStudentId = request.getParameter("studentId");
			
			// delete student from database
			medicineDbUtil.deleteStudent(theStudentId);
			
			// send them back to "list students" page
			listMedicines(request, response);
		}
	
	
	private void updateStudent(HttpServletRequest request, HttpServletResponse response)
			throws Exception {

			// read student info from form data
			int id = Integer.parseInt(request.getParameter("studentId"));
			String medicineName = request.getParameter("medicineName");
			int units = Integer.parseInt(request.getParameter("units"));
			double cost = Double.parseDouble(request.getParameter("cost"));
			String mfgDate = request.getParameter("mfgDate");
			String expDate = request.getParameter("expDate");
			
			// create a new student object
			Medicine theStudent = new Medicine(id, medicineName, units, cost, mfgDate, expDate);
			
			// perform update on database
			medicineDbUtil.updateStudent(theStudent);
			
			// send them back to the "list students" page
			listMedicines(request, response);
			
		}

	private void loadStudent(HttpServletRequest request, HttpServletResponse response) 
			throws Exception {

			// read student id from form data
			String theStudentId = request.getParameter("studentId");
			
			// get student from database (db util)
			Medicine theStudent = medicineDbUtil.getMedicines(theStudentId);
			
			// place student in the request attribute
			request.setAttribute("THE_STUDENT", theStudent);
			
			// send to jsp page: update-student-form.jsp
			RequestDispatcher dispatcher = 
					request.getRequestDispatcher("/update-student-form.jsp");
			dispatcher.forward(request, response);		
		}



//	private void addStudent(HttpServletRequest request, HttpServletResponse response) throws Exception {
//
//		// read student info from form data
//		String firstName = request.getParameter("firstName");
//		String lastName = request.getParameter("lastName");
//		String email = request.getParameter("email");
//		String course = request.getParameter("course");
//		
//		// create a new student object
//		Medicine theStudent = new Medicine(firstName, lastName, email, course);
//		
//		// add the student to the database
//		medicineDbUtil.addStudent(theStudent);
//				
//		// send back to main page (the student list)
//		listMedicines(request, response);
//	}
//	

	private void listMedicines(HttpServletRequest request, HttpServletResponse response) 
		throws Exception {

		// get students from db util
		List<Medicine> medicines = medicineDbUtil.getMedicines();
		
		// add students to the request
		request.setAttribute("MEDICINE_LIST", medicines);
				
		// send to JSP page (view)
		RequestDispatcher dispatcher = request.getRequestDispatcher("/list-medicines.jsp");
		dispatcher.forward(request, response);
	}

}





